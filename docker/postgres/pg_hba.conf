# PostgreSQL Client Authentication Configuration File
# ===================================================
#
# This file controls: which hosts are allowed to connect, how clients
# are authenticated, which PostgreSQL user names they can use, which
# databases they can access.
#
# TYPE  DATABASE        USER            ADDRESS                 METHOD
#
# TYPE can be "local", "host", "hostssl", or "hostnossl"
# DATABASE can be "all", "sameuser", "samerole", "replication", a database name, or a comma-separated list
# USER can be "all", a user name, a group name prefixed with "+", or a comma-separated list
# ADDRESS specifies the set of hosts the record matches (IP address range or hostname)
# METHOD can be "trust", "reject", "md5", "password", "scram-sha-256", "peer", "ident", etc.
#
# SECURITY: Use scram-sha-256 for all password authentication in production
# ===================================================

# Local connections (Unix domain socket)
# Allow postgres superuser to connect via peer authentication
local   all             postgres                                peer

# IPv4 local connections
local   all             all                                     scram-sha-256

# IPv4 connections from Docker network
# Docker default bridge network range
host    all             all             172.16.0.0/12           scram-sha-256

# Custom Docker network (from docker-compose.prod.yml)
host    all             all             172.28.0.0/16           scram-sha-256

# IPv4 localhost connections
host    all             all             127.0.0.1/32            scram-sha-256

# IPv6 localhost connections
host    all             all             ::1/128                 scram-sha-256

# Replication connections (if setting up replication)
# local   replication     all                                     peer
# host    replication     all             127.0.0.1/32            scram-sha-256
# host    replication     all             ::1/128                 scram-sha-256

# Deny all other connections
# This is implicit, but shown here for clarity
# host    all             all             0.0.0.0/0               reject
# host    all             all             ::/0                    reject

# ===================================================
# NOTES:
# ===================================================
# 1. Order matters - first matching rule is used
# 2. Reload configuration: docker exec postgres pg_ctl reload
# 3. Test connections: psql -h localhost -U postgres -d kevinalthaus
# 4. For production, restrict to known IP ranges only
# 5. Monitor failed authentication attempts in PostgreSQL logs
# ===================================================
