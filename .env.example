# Environment Configuration
# Copy this file to .env and fill in your values
# DO NOT commit .env to version control

# Application Environment
NODE_ENV=development

# API Gateway
API_GATEWAY_PORT=3000
API_GATEWAY_HOST=localhost
API_GATEWAY_URL=http://localhost:3000

# Main Application
MAIN_APP_PORT=3001
MAIN_APP_HOST=localhost
MAIN_APP_URL=http://localhost:3001

# Python Service
PYTHON_SERVICE_PORT=8000
PYTHON_ENV=development
PYTHON_SERVICE_URL=http://localhost:8000

# Database Configuration
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=changeme_secure_password
POSTGRES_DB=kevinalthaus

# Database URL (constructed from above values)
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_URL=redis://localhost:6379

# Security
# CRITICAL REQUIREMENT: All secret values below MUST be set before starting services
# Services will FAIL TO START if JWT_SECRET or SESSION_SECRET are missing/empty
# Generate secure random strings for production for ALL secret values below
# (JWT_SECRET, SESSION_SECRET, CSRF_SECRET, ENCRYPTION_KEY, PLUGIN_SIGNATURE_SECRET)
# Use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# Or use: openssl rand -hex 32
# DO NOT use the placeholder values below in production - generate your own!
JWT_SECRET=REPLACE_WITH_SECURE_RANDOM_32_PLUS_CHAR_STRING
JWT_EXPIRES_IN=7d
SESSION_SECRET=REPLACE_WITH_SECURE_RANDOM_32_PLUS_CHAR_STRING
CSRF_SECRET=REPLACE_WITH_SECURE_RANDOM_32_PLUS_CHAR_STRING
ENCRYPTION_KEY=REPLACE_WITH_SECURE_RANDOM_32_PLUS_CHAR_STRING

# Plugin System
PLUGIN_UPLOAD_MAX_SIZE=52428800
PLUGIN_DIRECTORY=./plugins
# See Security section above for instructions on generating secure random strings
PLUGIN_SIGNATURE_SECRET=REPLACE_WITH_SECURE_RANDOM_32_PLUS_CHAR_STRING

# CORS Configuration
CORS_ORIGIN=http://localhost:3001,http://localhost:3000
# NOTE: If CORS_ORIGIN includes '*', credentials (cookies/authorization) are automatically disabled
# and origin will be set to '*' by the servers to comply with CORS requirements.
CORS_CREDENTIALS=true

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Logging
LOG_LEVEL=info
LOG_FORMAT=json
ENABLE_REQUEST_LOGGING=true

# File Uploads
UPLOAD_MAX_SIZE=10485760
UPLOAD_DIRECTORY=./uploads
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,image/webp,application/pdf

# Email Configuration (if applicable)
SMTP_HOST=
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@kevinalthaus.com
SMTP_FROM_NAME=Kevin Althaus

# External Services (optional)
# Add any third-party API keys or service credentials here
# EXAMPLE_API_KEY=
# EXAMPLE_API_SECRET=

# Feature Flags
ENABLE_PLUGIN_SYSTEM=true
ENABLE_THEME_SYSTEM=true
ENABLE_API_DOCS=true
ENABLE_METRICS=true

# Performance
NODE_OPTIONS=--max-old-space-size=4096
UV_THREADPOOL_SIZE=4

# Security Headers
HELMET_CSP_ENABLED=true
HELMET_HSTS_ENABLED=true

# Monitoring (optional)
# SENTRY_DSN=
# NEW_RELIC_LICENSE_KEY=
# DATADOG_API_KEY=
